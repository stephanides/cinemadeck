server { # Non-SSL configuration
    server_name thecinemadeck.com; # cinemadeck.codebrothers.sk;

    location / {
        proxy_pass http://localhost:3004;

        # http2_push_preload on;

        # http2_push /static/css/bootstrap/bootstrap.min.css;
        # http2_push /static/css/react-image-lightbox/style.min.css;
        # http2_push /static/css/fortawesome/styles.min.css;
        # http2_push /static/images/vizual.jpg;
        # http2_push /static/images/logo-light.svg;
        # http2_push /static/images/aboutKarty/spoluKarty.png;
        # http2_push /static/images/unique/karty.png;
        # http2_push /static/images/content/background.png;
        # http2_push /static/fonts/ProximaNova-Bold.otf;
        # http2_push /static/fonts/ProximaNova-Semibold.otf;
        # http2_push /static/fonts/ProximaNova-Regular.otf;
        # http2_push /static/fonts/ProximaNova-Light.otf;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade; 
    }

    location ~* ^\/_next\/.*\/app.js$ {
        sendfile   on;
        tcp_nopush on;
        default_type application/javascript;
        root /var/www/cinemadeck;
        rewrite ^ /build/.next/app.js break;
        # static app.js file has a build hash, cache for a year or forever if supported
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    } 

    # Match our page js files and serve it with NGINX
    location ~* ^\/_next\/.*\/page\/(?<page_name>[^\/\n?]*).*$ {
        sendfile   on;
        tcp_nopush on;
        default_type application/javascript;
        root /var/www/cinemadeck;
        if ($page_name = '') {
            set $page_name index;
        }
        rewrite ^ /build/.next/bundles/pages/$page_name.js break;
        # static page JS bundle requests build hash, cache for a year or forever if supported
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Match any chunk files and serve them with NGINX
    location ~* ^\/_next\/.*\/webpack\/chunks\/(?<chunk_name>[^\/\n?]*).*$ {
        sendfile   on;
        tcp_nopush on;
        default_type application/javascript;
        root /var/www/cinemadeck;
        rewrite ^ /build/.next/chunks/$chunk_name break;
        # static chunk requests build hash, cache for a year or forever if supported
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

    # Serve any static assets with NGINX
    location /static {
        root /var/www/cinemadeck;
        # The static directory doesn't use a BuildID, so we must have a short 1 day cache for now "public, max-age=86400"
        add_header Cache-Control "public, max-age=31536000, immutable" always;
    }

}server {
    if ($host = thecinemadeck.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name thecinemadeck.com; # cinemadeck.codebrothers.sk;
    listen 80;
    return 404; # managed by Certbot


}